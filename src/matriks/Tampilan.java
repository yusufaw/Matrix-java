/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package matriks;

import javax.swing.JOptionPane;
import javax.swing.UIManager;
import larik.Larik;

/**
 *
 * @author Yusuf Aji Wibowo
 */
public class Tampilan extends javax.swing.JFrame {
    private UIManager.LookAndFeelInfo looks[];
    
    Matrik A;
    Matrik B;
    String ordoString;
    int ordo;
    String matriksA = null;
    String matriksB = null;
    String nol_jam = "";
    String nol_menit = "";
    String nol_detik = "";
    String xx;
    String nm;
    String baris;
    String kolom;
    int barisInt;
    int kolomInt;
    Matrik C;
    Larik L;

    /**
     * Creates new form Tampilan
     */
    public Tampilan() {
        initComponents();
        setLocationRelativeTo(null);
        looks = UIManager.getInstalledLookAndFeels();
//        String lookAndFeel = javax.swing.UIManager.getSystemLookAndFeelClassName();
//        try {
//            javax.swing.UIManager.setLookAndFeel(lookAndFeel);
//        } catch (Exception e) {
//        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        jPopupMenu2 = new javax.swing.JPopupMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenu6 = new javax.swing.JMenu();
        jMenu8 = new javax.swing.JMenu();
        jPanel1 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        M12 = new javax.swing.JTextField();
        M31 = new javax.swing.JTextField();
        M03 = new javax.swing.JTextField();
        M11 = new javax.swing.JTextField();
        M21 = new javax.swing.JTextField();
        M30 = new javax.swing.JTextField();
        M00 = new javax.swing.JTextField();
        M10 = new javax.swing.JTextField();
        M20 = new javax.swing.JTextField();
        M32 = new javax.swing.JTextField();
        M22 = new javax.swing.JTextField();
        M13 = new javax.swing.JTextField();
        M02 = new javax.swing.JTextField();
        M23 = new javax.swing.JTextField();
        M33 = new javax.swing.JTextField();
        labelInput = new javax.swing.JLabel();
        ok = new javax.swing.JButton();
        M01 = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        layarTampil = new javax.swing.JTextArea();
        jPanel4 = new javax.swing.JPanel();
        kaliCombo = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        hapus = new javax.swing.JComboBox();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem12 = new javax.swing.JMenuItem();
        jMenu7 = new javax.swing.JMenu();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenu9 = new javax.swing.JMenu();
        jMenuItem13 = new javax.swing.JMenuItem();
        jMenuItem14 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();

        jMenuItem3.setText("jMenuItem3");

        jMenu3.setText("jMenu3");

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        jMenuItem5.setText("jMenuItem5");

        jMenu6.setText("jMenu6");

        jMenu8.setText("jMenu8");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Program Matriks");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jButton2.setText("Cetak");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Input Matriks");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Input Matriks"));

        M12.setEnabled(false);

        M31.setEnabled(false);

        M03.setEnabled(false);

        M11.setEnabled(false);

        M21.setEnabled(false);

        M30.setEnabled(false);

        M00.setEnabled(false);
        M00.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                M00ActionPerformed(evt);
            }
        });

        M10.setEnabled(false);

        M20.setEnabled(false);

        M32.setEnabled(false);

        M22.setEnabled(false);

        M13.setEnabled(false);

        M02.setEnabled(false);

        M23.setEnabled(false);

        M33.setEnabled(false);

        labelInput.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        ok.setText("OK");
        ok.setEnabled(false);
        ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okActionPerformed(evt);
            }
        });

        M01.setEnabled(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(M20, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(M30, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(33, 33, 33)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(M31, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                                        .addComponent(M32, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(M12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(M21, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(M22, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(M10, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(M11, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(M00, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(33, 33, 33)
                                        .addComponent(M01, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(M02, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(M03, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ok)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(M13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(M23, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(M33, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addComponent(labelInput, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelInput, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(M01, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(M00, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(M03, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(M02, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(M13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(M12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(M11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(M10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(M22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(M23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(M21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(M20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(M30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(M32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(M33, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(M31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(ok)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Tampilan Matriks"));

        layarTampil.setBackground(new java.awt.Color(0, 0, 0));
        layarTampil.setColumns(20);
        layarTampil.setEditable(false);
        layarTampil.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        layarTampil.setForeground(new java.awt.Color(255, 255, 255));
        layarTampil.setRows(5);
        layarTampil.setText("Tampilan Matriks");
        layarTampil.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        layarTampil.setMargin(new java.awt.Insets(4, 3, 4, 3));
        jScrollPane1.setViewportView(layarTampil);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 510, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Operasi Matriks", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        kaliCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Perkalian Matriks", "Pertambahan Matriks", "Ambil Baris", "Ambil Kolom" }));
        kaliCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kaliComboActionPerformed(evt);
            }
        });

        jButton1.setText("Proses");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        hapus.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Hapus Matriks", "Hapus Matriks A", "Hapus Matriks B" }));
        hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusActionPerformed(evt);
            }
        });

        jButton4.setText("Keluar");
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Hapus");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(hapus, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addComponent(jButton1))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton4)
                                    .addComponent(jButton5))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(kaliCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(kaliCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addGap(30, 30, 30)
                .addComponent(hapus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton3)
                            .addComponent(jButton2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(65, 65, 65))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, -1, 400));

        jMenu1.setText("File");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem1.setText("Keluar");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu4.setText("Run");

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem4.setText("Input Matriks");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem4);

        jMenuItem6.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem6.setText("Cetak");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem6);

        jMenu5.setText("Hapus Matriks");

        jMenuItem7.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.SHIFT_MASK));
        jMenuItem7.setText("Hapus Matriks A");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem7);

        jMenuItem8.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.SHIFT_MASK));
        jMenuItem8.setText("Hapus Matriks B");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem8);

        jMenu4.add(jMenu5);

        jMenuItem9.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_K, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem9.setText("Perkalian Matriks");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem9);

        jMenuItem12.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem12.setText("Pertambahan Matriks");
        jMenuItem12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem12ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem12);

        jMenu7.setText("Ambil Baris");

        jMenuItem10.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem10.setText("Ambil Baris Matriks A");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem10);

        jMenuItem11.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem11.setText("Ambil Baris Matriks B");
        jMenuItem11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem11ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem11);

        jMenu4.add(jMenu7);

        jMenu9.setText("Ambil Kolom");

        jMenuItem13.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem13.setText("Ambil Kolom Matriks A");
        jMenuItem13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem13ActionPerformed(evt);
            }
        });
        jMenu9.add(jMenuItem13);

        jMenuItem14.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem14.setText("Ambil Kolom Matriks B");
        jMenuItem14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem14ActionPerformed(evt);
            }
        });
        jMenu9.add(jMenuItem14);

        jMenu4.add(jMenu9);

        jMenuBar1.add(jMenu4);

        jMenu2.setText("Tentang");

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("Tentang");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void input(){
        try {
            if (A == null) {
                ordoString = JOptionPane.showInputDialog(rootPane, "Masukkan ordo Matriks A");
            } else {
                ordoString = JOptionPane.showInputDialog(rootPane, "Masukkan ordo Matriks B");
            }
            ordo = Integer.parseInt(ordoString);
        } catch (NumberFormatException numberFormatException) {
            JOptionPane.showMessageDialog(rootPane, numberFormatException);
            return;
        }
        if (ordo > 4 || ordo < 2) {
            JOptionPane.showMessageDialog(rootPane, "Masukkan Tidak Tersedia");
        } else {
            labelInput.setText("Silahkan Masukkan Elemen Matriks " + ordo + "x" + ordo + "");
            ok.setEnabled(true);

            if (ordo == 2) {
                M00.setEnabled(true);
                M01.setEnabled(true);
                M10.setEnabled(true);
                M11.setEnabled(true);


            } else if (ordo == 3) {
                M00.setEnabled(true);
                M01.setEnabled(true);
                M10.setEnabled(true);
                M11.setEnabled(true);
                M02.setEnabled(true);
                M12.setEnabled(true);
                M21.setEnabled(true);
                M20.setEnabled(true);
                M22.setEnabled(true);
            } else if (ordo == 4) {
                M00.setEnabled(true);
                M01.setEnabled(true);
                M10.setEnabled(true);
                M11.setEnabled(true);
                M02.setEnabled(true);
                M12.setEnabled(true);
                M21.setEnabled(true);
                M20.setEnabled(true);
                M22.setEnabled(true);
                M03.setEnabled(true);
                M13.setEnabled(true);
                M23.setEnabled(true);
                M33.setEnabled(true);
                M30.setEnabled(true);
                M31.setEnabled(true);
                M32.setEnabled(true);
            }
        }
    }
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        input();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void M00ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_M00ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_M00ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        layarTampil.setText("Matriks A : \n" + A + "\n\nMatriks B : \n" + B);
    }//GEN-LAST:event_jButton2ActionPerformed

    public void setMatriks(Matrik M) {
        if (ordo == 2) {
            M.setItem(0, 0, Integer.parseInt(M00.getText()));
            M.setItem(0, 1, Integer.parseInt(M01.getText()));
            M.setItem(1, 0, Integer.parseInt(M10.getText()));
            M.setItem(1, 1, Integer.parseInt(M11.getText()));
        } else if (ordo == 3) {
            M.setItem(0, 0, Integer.parseInt(M00.getText()));
            M.setItem(0, 1, Integer.parseInt(M01.getText()));
            M.setItem(1, 0, Integer.parseInt(M10.getText()));
            M.setItem(1, 1, Integer.parseInt(M11.getText()));
            M.setItem(0, 2, Integer.parseInt(M02.getText()));
            M.setItem(1, 2, Integer.parseInt(M12.getText()));
            M.setItem(2, 2, Integer.parseInt(M22.getText()));
            M.setItem(2, 1, Integer.parseInt(M21.getText()));
            M.setItem(2, 0, Integer.parseInt(M22.getText()));
        } else {
            M.setItem(0, 0, Integer.parseInt(M00.getText()));
            M.setItem(0, 1, Integer.parseInt(M01.getText()));
            M.setItem(1, 0, Integer.parseInt(M10.getText()));
            M.setItem(1, 1, Integer.parseInt(M11.getText()));
            M.setItem(0, 2, Integer.parseInt(M02.getText()));
            M.setItem(1, 2, Integer.parseInt(M12.getText()));
            M.setItem(2, 2, Integer.parseInt(M22.getText()));
            M.setItem(2, 1, Integer.parseInt(M21.getText()));
            M.setItem(2, 0, Integer.parseInt(M20.getText()));
            M.setItem(0, 3, Integer.parseInt(M03.getText()));
            M.setItem(1, 3, Integer.parseInt(M13.getText()));
            M.setItem(2, 3, Integer.parseInt(M23.getText()));
            M.setItem(3, 3, Integer.parseInt(M33.getText()));
            M.setItem(3, 0, Integer.parseInt(M30.getText()));
            M.setItem(3, 1, Integer.parseInt(M31.getText()));
            M.setItem(3, 2, Integer.parseInt(M32.getText()));
        }
    }
    private void okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okActionPerformed
        // TODO add your handling code here:
        if (A == null) {
            A = new Matrik(ordo, ordo);
            setMatriks(A);
            layarTampil.setText("Matriks A berhasil diinputkan");
        } else {
            B = new Matrik(ordo, ordo);
            setMatriks(B);
            layarTampil.setText("Matriks B berhasil diinputkan");
        }
        M00.setEnabled(false);
        M01.setEnabled(false);
        M02.setEnabled(false);
        M03.setEnabled(false);
        M10.setEnabled(false);
        M11.setEnabled(false);
        M12.setEnabled(false);
        M13.setEnabled(false);
        M20.setEnabled(false);
        M21.setEnabled(false);
        M22.setEnabled(false);
        M23.setEnabled(false);
        M30.setEnabled(false);
        M31.setEnabled(false);
        M32.setEnabled(false);
        M33.setEnabled(false);

        M00.setText("");
        M01.setText("");
        M02.setText("");
        M03.setText("");
        M10.setText("");
        M11.setText("");
        M12.setText("");
        M13.setText("");
        M20.setText("");
        M21.setText("");
        M22.setText("");
        M23.setText("");
        M30.setText("");
        M31.setText("");
        M32.setText("");
        M33.setText("");
        ok.setEnabled(false);
        labelInput.setText("");
    }//GEN-LAST:event_okActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
       dialog dial=new dialog(this, rootPaneCheckingEnabled);
       dial.setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusActionPerformed
        // TODO add your handling code here
       
    }//GEN-LAST:event_hapusActionPerformed

    private void kaliComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kaliComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_kaliComboActionPerformed

    /*
     * prosedur untuk menampilkan baris ke
     */
    public void setBaris(Matrik M, String nm) {
        baris = JOptionPane.showInputDialog(rootPane, "Masukkan baris keberapa");
        try {
            barisInt = Integer.parseInt(baris);
        } catch (NumberFormatException numberFormatException) {
            JOptionPane.showMessageDialog(rootPane, numberFormatException);
        }
        
        if(M == null || barisInt > M.getNBaris()){
           JOptionPane.showMessageDialog(rootPane, "Masukkan Anda tidak ada bos");
        }
        else{
        L = M.getBaris(barisInt - 1);
        String total = "";
        for (int i = 0; i < L.getSize(); i++) {
            total = total + " " + L.getItem(i);
        }
        layarTampil.setText("Matriks "+nm+"\n"+M+"\nBaris ke-" + barisInt + " dari matriks " + nm + " : " + total);
        }
    }
    
    public void setKolom(Matrik M, String nm){
        kolom = JOptionPane.showInputDialog(rootPane, "Masukkan kolom keberapa");
        try {
            kolomInt = Integer.parseInt(kolom);
        } catch (NumberFormatException numberFormatException) {
            JOptionPane.showMessageDialog(rootPane, numberFormatException);
        }
        if(M == null || kolomInt>M.getNKolom()){
            JOptionPane.showMessageDialog(rootPane, "Masukkan Anda tidak ada bos");
        }
        L = M.getKolom(kolomInt - 1);
        String total = "";
        for (int i = 0; i < L.getSize(); i++) {
            total = total + " " + L.getItem(i);
        }
        layarTampil.setText("Matriks "+nm+"\n"+M+"\nKolom ke-" + kolomInt + " dari matriks " + nm + " : " + total);
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        if (kaliCombo.getSelectedItem() == "Perkalian Matriks") {
            if (A == null) {
                layarTampil.setText("Matriks A masih kosong");
            } else if (B == null) {
                layarTampil.setText("Matriks B masih kosong");
                
            } else if (A.getNBaris() != B.getNKolom()) {
                JOptionPane.showMessageDialog(rootPane, "Jumlah Baris di Matriks A harus sama dengan jumlah kolom di Matriks B !");
            } else {
                C = new Matrik(ordo, ordo);
                for (int i = 0; i < A.getNBaris(); i++) {
                    for (int j = 0; j < B.getNBaris(); j++) {
                        C = C.kali(A, B);
                    }
                }
                layarTampil.setText("Matriks A :\n"+A+"\nMatriks B :\n"+B+"\nHasil Perkalian Matriks A dan B\n" + C);
            }
        } else if (kaliCombo.getSelectedItem() == "Pertambahan Matriks") {
            if (A == null) {
                layarTampil.setText("Matriks A masih kosong");
            } else if (B == null) {
                layarTampil.setText("Matriks B masih kosong");
            } else {
                C = new Matrik(ordo, ordo);
                C = C.tambah(A, B);
                layarTampil.setText("Matriks A :\n"+A+"\nMatriks B :\n"+B+"\nHasil Pertambahan Matriks A dan B\n" + C);
            }
        } else if (kaliCombo.getSelectedItem() == "Ambil Baris") {
            nm = JOptionPane.showInputDialog(rootPane, "Matriks A atau B?");
            if ("A".equals(nm)) {
                setBaris(A, nm);
            } else if ("B".equals(nm)) {
                setBaris(B, nm);
            } else {
                JOptionPane.showMessageDialog(rootPane, "Gak ono bos");
            }
        } else {
            nm = JOptionPane.showInputDialog(rootPane, "Matriks A atau B?");
            if ("A".equals(nm)) {
                setKolom(A, nm);
            } else if ("B".equals(nm)) {
                setKolom(B, nm);
            } else {
                JOptionPane.showMessageDialog(rootPane, "Gak ono bos");
            }
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        input();
        
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        // TODO add your handling code here:
        layarTampil.setText("Matriks A : \n" + A + "\n\nMatriks B : \n" + B);
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        // TODO add your handling code here:
        A = null;
        layarTampil.setText("Matriks A berhasil dihapus");
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        // TODO add your handling code here:
        B = null;
        layarTampil.setText("Matriks B berhasi dihapus");
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        // TODO add your handling code here:
        if (A == null) {
                layarTampil.setText("Matriks A masih kosong");
            } else if (B == null) {
                layarTampil.setText("Matriks B masih kosong");
                
            } else if (A.getNBaris() != B.getNKolom()) {
                JOptionPane.showMessageDialog(rootPane, "Jumlah Baris di Matriks A harus sama dengan jumlah kolom di Matriks B !");
            } else {
                C = new Matrik(ordo, ordo);
                for (int i = 0; i < A.getNBaris(); i++) {
                    for (int j = 0; j < B.getNBaris(); j++) {
                        C = C.kali(A, B);
                    }
                }
                layarTampil.setText("Matriks A :\n"+A+"\nMatriks B :\n"+B+"\nHasil Perkalian Matriks A dan B\n" + C);
            }
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jMenuItem12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem12ActionPerformed
        // TODO add your handling code here:
        if (A == null) {
            layarTampil.setText("Matriks A masih kosong");
        } else if (B == null) {
            layarTampil.setText("Matriks B masih kosong");
        } else {
            C = new Matrik(ordo, ordo);
            C = C.tambah(A, B);
            layarTampil.setText("Matriks A :\n" + A + "\nMatriks B :\n" + B + "\nHasil Pertambahan Matriks A dan B\n" + C);
        }
    }//GEN-LAST:event_jMenuItem12ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        // TODO add your handling code here:
        setBaris(A, "A");
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem11ActionPerformed
        // TODO add your handling code here:
        setBaris(B, "B");
    }//GEN-LAST:event_jMenuItem11ActionPerformed

    private void jMenuItem13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem13ActionPerformed
        // TODO add your handling code here:
        setKolom(A, "A");
    }//GEN-LAST:event_jMenuItem13ActionPerformed

    private void jMenuItem14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem14ActionPerformed
        // TODO add your handling code here:
        setKolom(B, "B");
    }//GEN-LAST:event_jMenuItem14ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
         String del = (String) hapus.getSelectedItem();
        if ("Hapus Matriks A".equals(del)) {
            A = null;
            layarTampil.setText("Matriks A berhasil dihapus");
        } else if ("Hapus Matriks B".equals(del)) {
            B = null;
            layarTampil.setText("Matriks B berhasi dihapus");
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
//        try {
//            UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
//
//        } catch (Exception e) {
//            System.out.println("Nimbus isn't available");
//        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new Tampilan().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField M00;
    private javax.swing.JTextField M01;
    private javax.swing.JTextField M02;
    private javax.swing.JTextField M03;
    private javax.swing.JTextField M10;
    private javax.swing.JTextField M11;
    private javax.swing.JTextField M12;
    private javax.swing.JTextField M13;
    private javax.swing.JTextField M20;
    private javax.swing.JTextField M21;
    private javax.swing.JTextField M22;
    private javax.swing.JTextField M23;
    private javax.swing.JTextField M30;
    private javax.swing.JTextField M31;
    private javax.swing.JTextField M32;
    private javax.swing.JTextField M33;
    private javax.swing.JComboBox hapus;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    public javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenu jMenu8;
    private javax.swing.JMenu jMenu9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JPopupMenu jPopupMenu2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox kaliCombo;
    private javax.swing.JLabel labelInput;
    private javax.swing.JTextArea layarTampil;
    private javax.swing.JButton ok;
    // End of variables declaration//GEN-END:variables
}
